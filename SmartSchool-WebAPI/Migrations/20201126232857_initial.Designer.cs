// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartSchool_WebAPI.Data;

namespace SmartSchool_WebAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201126232857_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("SmartSchool_WebAPI.Models.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("TeacherId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Disciplines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Matemática",
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Física",
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Português",
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Inglês",
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 5,
                            Name = "Programação",
                            TeacherId = 5
                        });
                });

            modelBuilder.Entity("SmartSchool_WebAPI.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Marta",
                            Sobrenome = "Kent",
                            Telefone = "33225555"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Paula",
                            Sobrenome = "Isabela",
                            Telefone = "3354288"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Laura",
                            Sobrenome = "Antonia",
                            Telefone = "55668899"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Luiza",
                            Sobrenome = "Maria",
                            Telefone = "6565659"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Lucas",
                            Sobrenome = "Machado",
                            Telefone = "565685415"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Pedro",
                            Sobrenome = "Alvares",
                            Telefone = "456454545"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Paulo",
                            Sobrenome = "José",
                            Telefone = "9874512"
                        });
                });

            modelBuilder.Entity("SmartSchool_WebAPI.Models.StudentDiscipline", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DisciplineId")
                        .HasColumnType("INTEGER");

                    b.HasKey("StudentId", "DisciplineId");

                    b.HasIndex("DisciplineId");

                    b.ToTable("StudentsDisciplines");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            DisciplineId = 2
                        },
                        new
                        {
                            StudentId = 1,
                            DisciplineId = 4
                        },
                        new
                        {
                            StudentId = 1,
                            DisciplineId = 5
                        },
                        new
                        {
                            StudentId = 2,
                            DisciplineId = 1
                        },
                        new
                        {
                            StudentId = 2,
                            DisciplineId = 2
                        },
                        new
                        {
                            StudentId = 2,
                            DisciplineId = 5
                        },
                        new
                        {
                            StudentId = 3,
                            DisciplineId = 1
                        },
                        new
                        {
                            StudentId = 3,
                            DisciplineId = 2
                        },
                        new
                        {
                            StudentId = 3,
                            DisciplineId = 3
                        },
                        new
                        {
                            StudentId = 4,
                            DisciplineId = 1
                        },
                        new
                        {
                            StudentId = 4,
                            DisciplineId = 4
                        },
                        new
                        {
                            StudentId = 4,
                            DisciplineId = 5
                        },
                        new
                        {
                            StudentId = 5,
                            DisciplineId = 4
                        },
                        new
                        {
                            StudentId = 5,
                            DisciplineId = 5
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 1
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 2
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 3
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 4
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 1
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 2
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 3
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 4
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 5
                        });
                });

            modelBuilder.Entity("SmartSchool_WebAPI.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Lauro",
                            Surname = "Sousa"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Roberto",
                            Surname = "Oliveira"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ronaldo",
                            Surname = "Junior"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Rodrigo",
                            Surname = "Mendes"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Alexandre",
                            Surname = "Lima"
                        });
                });

            modelBuilder.Entity("SmartSchool_WebAPI.Models.Discipline", b =>
                {
                    b.HasOne("SmartSchool_WebAPI.Models.Teacher", "Teacher")
                        .WithMany("Disciplines")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("SmartSchool_WebAPI.Models.StudentDiscipline", b =>
                {
                    b.HasOne("SmartSchool_WebAPI.Models.Discipline", "Discipline")
                        .WithMany("StudentDisciplines")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool_WebAPI.Models.Student", "Student")
                        .WithMany("StudentsDisciplines")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discipline");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SmartSchool_WebAPI.Models.Discipline", b =>
                {
                    b.Navigation("StudentDisciplines");
                });

            modelBuilder.Entity("SmartSchool_WebAPI.Models.Student", b =>
                {
                    b.Navigation("StudentsDisciplines");
                });

            modelBuilder.Entity("SmartSchool_WebAPI.Models.Teacher", b =>
                {
                    b.Navigation("Disciplines");
                });
#pragma warning restore 612, 618
        }
    }
}
